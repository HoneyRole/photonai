{
   "PretrainedCNNClassifier": [
      "photon_core.PipelineWrapper.PretrainedCNNClassifier.PretrainedCNNClassifier",
      "Estimator"
   ],
   "KerasDNNClassifier": [
      "photon_core.PipelineWrapper.KerasDNNClassifier.KerasDNNClassifier",
      "Estimator"
   ],
   "CNN1d": [
      "photon_core.PipelineWrapper.CNN1d.CNN1d",
      "Estimator"
   ],
   "rl_cnn": [
      "photon_core.PipelineWrapper.RLCNN.RLCNN",
      "Estimator"
   ],
   "pca": [
      "sklearn.decomposition.PCA",
      "Transformer"
   ],
   "KNeighborsRegressor": [
      "sklearn.neighbors.KNeighborsRegressor",
      "Estimator"
   ],
   "RandomForestRegressor": [
      "sklearn.ensemble.RandomForestRegressor",
      "Estimator"
   ],
   "RandomForestClassifier":[
      "sklearn.ensemble.RandomForestClassifier",
      "Estimator"
   ],
   "KerasDNNRegressor": [
      "photon_core.PipelineWrapper.KerasDNNRegressor.KerasDNNRegressor",
      "Estimator"
   ],
   "logistic": [
      "sklearn.linear_model.LogisticRegression",
      "Estimator"
   ],
   "wrapper_model": [
      "photon_core.PipelineWrapper.WrapperModel.WrapperModel",
      "Estimator"
   ],
   "f_classif_select_percentile": [
      "photon_core.PipelineWrapper.FeatureSelection.FClassifSelectPercentile",
      "Transformer"
   ],
   "SelectPercentile": [
      "sklearn.feature_selection.SelectPercentile",
      "Transformer"
   ],
   "SVR": [
      "sklearn.svm.SVR",
      "Estimator"
   ],
   "f_regression_select_percentile": [
      "photon_core.PipelineWrapper.FeatureSelection.FRegressionSelectPercentile",
      "Transformer"
   ],
   "mi_regression_select_percentile":[
      "photon_core.PipelineWrapper.FeatureSelection.MIRegressionSelectPercentile",
      "Transformer"
   ],
   "mi_classif_select_percentile":[
      "photon_core.PipelineWrapper.FeatureSelection.MIClassifSelectPercentile",
      "Transformer"
   ],
   "chi2_classif_select_kbest":[
      "photon_core.PipelineWrapper.FeatureSelection.Chi2KBest",
      "Transformer"
   ],
   "logistic_gwas_fs":[
      "photon_core.PipelineWrapper.FeatureSelection.LogisticGWASFeatureSelection",
      "Transformer"
   ],
   "svc": [
      "sklearn.svm.SVC",
      "Estimator"
   ],
   "SourceSplitter": [
      "photon_core.PipelineWrapper.SourceSplitter.SourceSplitter",
      "Transformer"
   ],
   "py_esn_c": [
      "photon_core.PipelineWrapper.PyESNWrapper.PyESNClassifier",
      "Estimator"
   ],
   "ae_pca": [
      "photon_core.PipelineWrapper.PCA_AE_Wrapper.PCA_AE_Wrapper",
      "Transformer"
   ],
   "test_wrapper": [
      "photon_core.PipelineWrapper.TestWrapper.WrapperTestElement",
      "Estimator"
   ],
   "standard_scaler": [
      "sklearn.preprocessing.StandardScaler",
      "Transformer"
   ],
   "DecisionTreeRegressor": [
      "sklearn.tree.DecisionTreeRegressor",
      "Estimator"
   ],
   "SiameseDNNClassifier": [
      "photon_core.PipelineWrapper.SiameseDNNClassifier.SiameseDNNClassifier",
      "Estimator"
   ],
   "dnn": [
      "photon_core.PipelineWrapper.TFDNNClassifier.TFDNNClassifier",
      "Estimator"
   ],
   "knn": [
      "sklearn.neighbors.KNeighborsClassifier",
      "Estimator"
   ],
   "py_esn_r": [
      "photon_core.PipelineWrapper.PyESNWrapper.PyESNRegressor",
      "Estimator"
   ],
   "f_classif_select_p_value": [
      "photon_core.PipelineWrapper.FeatureSelection.FRegressionFilterPValue",
      "Transformer"
   ],
   "pearson_feature_selector": [
      "photon_core.PipelineWrapper.FeatureSelection.PearsonFeatureSelector",
      "Transformer"
   ],
   "KerasDNNMultiOutput": [
      "photon_core.PipelineWrapper.KerasDNNMultiOutput.KerasDNNMultiOutput",
      "Estimator"
   ],
   "interaction_terms": [
      "sklearn.preprocessing.PolynomialFeatures",
      "Transformer"
   ],
   "CategorialANOVASelectPercentile": [
      "photon_core.PipelineWrapper.FeatureSelection.AnovaSelectPercentile",
      "Transformer"
   ],
   "ZeroVarianceFilter": [
      "sklearn.feature_selection.VarianceThreshold",
      "Transformer"
   ],
   "OneClassSVM": [
      "sklearn.svm.OneClassSVM",
      "Estimator"
   ]
}
