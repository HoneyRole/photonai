{ "DictionaryLearning": [
    "sklearn.decomposition.DictionaryLearning",
    "Transformer"
  ],
  "FactorAnalysis": [
    "sklearn.decomposition.FactorAnalysis",
    "Transformer"
  ],
  "FastICA": [
    "sklearn.decomposition.FastICA",
    "Transformer"
  ],
  "IncrementalPCA": [
    "sklearn.decomposition.IncrementalPCA",
    "Transformer"
  ],
  "KernelPCA": [
    "sklearn.decomposition.KernelPCA",
    "Transformer"
  ],
  "LatentDirichletAllocation": [
    "sklearn.decomposition.LatentDirichletAllocation",
    "Transformer"
  ],
  "MiniBatchDictionaryLearning": [
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "Transformer"
  ],
  "MiniBatchSparsePCA": [
    "sklearn.decomposition.MiniBatchSparsePCA",
    "Transformer"
  ],
  "NMF": [
    "sklearn.decomposition.NMF",
    "Transformer"
  ],
  "PCA": [
    "sklearn.decomposition.PCA",
    "Transformer"
  ],
  "SparsePCA": [
    "sklearn.decomposition.SparsePCA",
    "Transformer"
  ],
  "SparseCoder": [
    "sklearn.decomposition.SparseCoder",
    "Transformer"
  ],
  "TruncatedSVD": [
    "sklearn.decomposition.TruncatedSVD",
    "Transformer"
  ],
  "dict_learning": [
    "sklearn.decomposition.dict_learning",
    "Transformer"
  ],
  "dict_learning_online": [
    "sklearn.decomposition.dict_learning_online",
    "Transformer"
  ],
  "fastica": [
    "sklearn.decomposition.fastica",
    "Transformer"
  ],
  "sparse_encode": [
    "sklearn.decomposition.sparse_encode",
    "Transformer"
  ],


  "CCA": [
    "sklearn.cross_decomposition.CCA",
    "Transformer"
  ],
  "PLSCanonical": [
    "sklearn.cross_decomposition.PLSCanonical",
    "Transformer"
  ],
  "PLSRegression": [
    "sklearn.cross_decomposition.PLSRegression",
    "Transformer"
  ],
  "PLSSVD": [
    "sklearn.cross_decomposition.PLSSVD",
    "Transformer"
  ],


  "GenericUnivariateSelect": [
    "sklearn.feature_selection.GenericUnivariateSelect",
    "Transformer"
  ],
  "SelectPercentile": [
    "sklearn.feature_selection.SelectPercentile",
    "Transformer"
  ],
  "SelectKBest": [
    "sklearn.feature_selection.SelectKBest",
    "Transformer"
  ],
  "SelectFpr": [
    "sklearn.feature_selection.SelectFpr",
    "Transformer"
  ],
  "SelectFdr": [
    "sklearn.feature_selection.SelectFdr",
    "Transformer"
  ],
  "SelectFromModel": [
    "sklearn.feature_selection.SelectFromModel",
    "Transformer"
  ],
  "SelectFwe": [
    "sklearn.feature_selection.SelectFwe",
    "Transformer"
  ],
  "RFE": [
    "sklearn.feature_selection.RFE",
    "Transformer"
  ],
  "RFECV": [
    "sklearn.feature_selection.RFECV",
    "Transformer"
  ],
  "VarianceThreshold": [
    "sklearn.feature_selection.VarianceThreshold",
    "Transformer"
  ],


  "Binarizer": [
    "sklearn.preprocessing.Binarizer",
    "Transformer"
  ],
  "FunctionTransformer": [
    "sklearn.preprocessing.FunctionTransformer",
    "Transformer"
  ],
  "Imputer": [
    "sklearn.preprocessing.Imputer",
    "Transformer"
  ],
  "KernelCenterer": [
    "sklearn.preprocessing.KernelCenterer",
    "Transformer"
  ],
  "MaxAbsScaler": [
    "sklearn.preprocessing.MaxAbsScaler",
    "Transformer"
  ],
  "MinMaxScaler": [
    "sklearn.preprocessing.MinMaxScaler",
    "Transformer"
  ],
  "Normalizer": [
    "sklearn.preprocessing.Normalizer",
    "Transformer"
  ],
  "PolynomialFeatures": [
    "sklearn.preprocessing.PolynomialFeatures",
    "Transformer"
  ],
  "QuantileTransformer": [
    "sklearn.preprocessing.QuantileTransformer",
    "Transformer"
  ],
  "RobustScaler": [
    "sklearn.preprocessing.RobustScaler",
    "Transformer"
  ],
  "StandardScaler": [
    "sklearn.preprocessing.StandardScaler",
    "Transformer"
  ],


  "DecisionTreeRegressor": [
    "sklearn.tree.DecisionTreeRegressor",
    "Estimator"
  ],
  "DecisionTreeClassifier": [
    "sklearn.tree.DecisionTreeClassifier",
    "Estimator"
  ],
  "ExtraDecisionTreeRegressor": [
    "sklearn.tree.ExtraDecisionTreeRegressor",
    "Estimator"
  ],
  "ExtraDecisionTreeClassifier": [
    "sklearn.tree.ExtraDecisionTreeClassifier",
    "Estimator"
  ],


  "LinearSVC": [
    "sklearn.svm.LinearSVC",
    "Estimator"
  ],
  "LinearSVR": [
    "sklearn.svm.LinearSVR",
    "Estimator"
  ],
  "NuSVC": [
    "sklearn.svm.NuSVC",
    "Estimator"
  ],
  "NuSVR": [
    "sklearn.svm.NuSVR",
    "Estimator"
  ],
  "SVC": [
    "sklearn.svm.SVC",
    "Estimator"
  ],
  "SVR": [
    "sklearn.svm.SVR",
    "Estimator"
  ],
  "OneClassSVM": [
    "sklearn.svm.OneClassSVM",
    "Estimator"
  ],


  "BernoulliRBM": [
    "sklearn.neural_network.BernoulliRBM",
    "Estimator"
  ],
  "MLPClassifier": [
    "sklearn.neural_network.MLPClassifier",
    "Estimator"
  ],
  "MLPRegressor": [
    "sklearn.neural_network.MLPRegressor",
    "Estimator"
  ],


  "KNeighborsClassifier": [
    "sklearn.neighbors.KNeighborsClassifier",
    "Estimator"
  ],
  "KNeighborsRegressor": [
    "sklearn.neighbors.KNeighborsRegressor",
    "Estimator"
  ],
  "RadiusNeighborsClassifier": [
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "Estimator"
  ],
  "RadiusNeighborsRegressor": [
    "sklearn.neighbors.RadiusNeighborsRegressor",
    "Estimator"
  ],
  "NearestCentroid": [
    "sklearn.neighbors.NearestCentroid",
    "Estimator"
  ],


  "BernoulliNB": [
    "sklearn.naive_bayes.BernoulliNB",
    "Estimator"
  ],
  "GaussianNB": [
    "sklearn.naive_bayes.GaussianNB",
    "Estimator"
  ],
  "MultinomialNB": [
    "sklearn.naive_bayes.MultinomialNB",
    "Estimator"
  ],




  "PretrainedCNNClassifier": [
    "photon_core.PipelineWrapper.PretrainedCNNClassifier.PretrainedCNNClassifier",
    "Estimator"
  ],
  "KerasDNNClassifier": [
    "photon_core.PipelineWrapper.KerasDNNClassifier.KerasDNNClassifier",
    "Estimator"
  ],
  "CNN1d": [
    "photon_core.PipelineWrapper.CNN1d.CNN1d",
    "Estimator"
  ],
  "rl_cnn": [
    "photon_core.PipelineWrapper.RLCNN.RLCNN",
    "Estimator"
  ],

  "RandomForestRegressor": [
    "sklearn.ensemble.RandomForestRegressor",
    "Estimator"
  ],
  "RandomForestClassifier": [
    "sklearn.ensemble.RandomForestClassifier",
    "Estimator"
  ],
  "KerasDNNRegressor": [
    "photon_core.PipelineWrapper.KerasDNNRegressor.KerasDNNRegressor",
    "Estimator"
  ],
  "logistic": [
    "sklearn.linear_model.LogisticRegression",
    "Estimator"
  ],
  "wrapper_model": [
    "photon_core.PipelineWrapper.WrapperModel.WrapperModel",
    "Estimator"
  ],
  "f_classif_select_percentile": [
    "photon_core.PipelineWrapper.FeatureSelection.FClassifSelectPercentile",
    "Transformer"
  ],


  "f_regression_select_percentile": [
    "photon_core.PipelineWrapper.FeatureSelection.FRegressionSelectPercentile",
    "Transformer"
  ],
  "mi_regression_select_percentile": [
    "photon_core.PipelineWrapper.FeatureSelection.MIRegressionSelectPercentile",
    "Transformer"
  ],
  "mi_classif_select_percentile": [
    "photon_core.PipelineWrapper.FeatureSelection.MIClassifSelectPercentile",
    "Transformer"
  ],
  "chi2_classif_select_kbest": [
    "photon_core.PipelineWrapper.FeatureSelection.Chi2KBest",
    "Transformer"
  ],
  "logistic_gwas_fs": [
    "photon_core.PipelineWrapper.FeatureSelection.LogisticGWASFeatureSelection",
    "Transformer"
  ],

  "SourceSplitter": [
    "photon_core.PipelineWrapper.SourceSplitter.SourceSplitter",
    "Transformer"
  ],
  "py_esn_c": [
    "photon_core.PipelineWrapper.PyESNWrapper.PyESNClassifier",
    "Estimator"
  ],
  "ae_pca": [
    "photon_core.PipelineWrapper.PCA_AE_Wrapper.PCA_AE_Wrapper",
    "Transformer"
  ],
  "test_wrapper": [
    "photon_core.PipelineWrapper.TestWrapper.WrapperTestElement",
    "Estimator"
  ],
  "standard_scaler": [
    "sklearn.preprocessing.StandardScaler",
    "Transformer"
  ],

  "SiameseDNNClassifier": [
    "photon_core.PipelineWrapper.SiameseDNNClassifier.SiameseDNNClassifier",
    "Estimator"
  ],
  "dnn": [
    "photon_core.PipelineWrapper.TFDNNClassifier.TFDNNClassifier",
    "Estimator"
  ],
  "knn": [
    "sklearn.neighbors.KNeighborsClassifier",
    "Estimator"
  ],
  "py_esn_r": [
    "photon_core.PipelineWrapper.PyESNWrapper.PyESNRegressor",
    "Estimator"
  ],
  "f_classif_select_p_value": [
    "photon_core.PipelineWrapper.FeatureSelection.FRegressionFilterPValue",
    "Transformer"
  ],
  "pearson_feature_selector": [
    "photon_core.PipelineWrapper.FeatureSelection.PearsonFeatureSelector",
    "Transformer"
  ],
  "KerasDNNMultiOutput": [
    "photon_core.PipelineWrapper.KerasDNNMultiOutput.KerasDNNMultiOutput",
    "Estimator"
  ],
  "interaction_terms": [
    "sklearn.preprocessing.PolynomialFeatures",
    "Transformer"
  ],
  "CategorialANOVASelectPercentile": [
    "photon_core.PipelineWrapper.FeatureSelection.AnovaSelectPercentile",
    "Transformer"
  ],
  "ZeroVarianceFilter": [
    "sklearn.feature_selection.VarianceThreshold",
    "Transformer"
  ],

  "BioCorex": [
    "photon_core.PipelineWrapper.BioCorex.BioCorex",
    "Transformer"
  ],
  "PhotonPCA": [
    "photon_core.PipelineWrapper.PhotonPCA.PhotonPCA",
    "Transformer"
  ],
  "SimpleAutoencoder": [
    "photon_core.PipelineWrapper.KerasAutoencoder.SimpleAutoencoder",
    "Estimator"
  ],
  "PhotonOneClassSVM": [
    "photon_core.PipelineWrapper.PhotonOneClassSVM.PhotonOneClassSVM",
    "Estimator"
  ],
  "SelectModelWrapper": [
    "photon_core.PipelineWrapper.FeatureSelection.ModelSelector",
    "Transformer"
  ],
  "ImbalancedDataTransform": [
    "photon_core.PipelineWrapper.ImbalancedWrapper.ImbalancedDataTransform",
    "Transformer"
  ],
  "DeepPRSClassifier": [
    "photon_core.PipelineWrapper.DeepPRS.DeepPRSClassifier"
  ]
}
